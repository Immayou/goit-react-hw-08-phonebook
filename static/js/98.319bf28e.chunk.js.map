{"version":3,"file":"static/js/98.319bf28e.chunk.js","mappings":"gOAqBMA,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,QAAQC,WAC5BC,SAAUJ,EAAAA,KAAaK,IAAI,GAAGC,IAAI,IAAIH,aAuDxC,UApDc,WACZ,IAAMI,GAAWC,EAAAA,EAAAA,MAYjB,OACE,+BACE,6BACE,SAAC,KAAD,CAAgBC,UAAW,OAC3B,SAAC,KAAD,WACE,SAAC,KAAD,CACEC,cAhBY,CACpBR,MAAO,GACPE,SAAU,IAeFO,SAZW,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BN,GAASO,EAAAA,EAAAA,IAAMF,IACfC,GACD,EAUSE,iBAAkBhB,EAHpB,UAKE,UAAC,KAAD,YACE,SAAC,KAAD,KACA,SAAC,KAAD,KACA,SAAC,KAAD,KACA,UAAC,KAAD,YACE,SAAC,KAAD,4BACA,SAAC,KAAD,CAAWiB,QAAQ,QAAnB,qBACA,SAAC,KAAD,CAAWC,KAAK,OAAOC,GAAG,QAAQC,KAAK,WACvC,SAAC,KAAD,CAAmBA,KAAK,QAAQC,UAAU,OAC1C,SAAC,KAAD,CAAWJ,QAAQ,WAAnB,uBACA,SAAC,KAAD,CACEC,KAAK,WACLC,GAAG,WACHC,KAAK,cAEP,SAAC,KAAD,CAAmBA,KAAK,WAAWC,UAAU,OAC7C,UAAC,KAAD,CAAYH,KAAK,SAAjB,WACE,SAAC,MAAD,CAAWI,MAAO,CAAEC,YAAa,UACjC,kDASjB,C,mYCxEYC,EAASC,EAAAA,EAAAA,IAAH,wTAKOC,GAObC,GAAUF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,mZAiBPI,EAAcJ,EAAAA,EAAAA,IAAH,+mBAgCXK,EAAeL,EAAAA,EAAAA,IAAH,+nBAiCZM,EAAgBN,EAAAA,EAAAA,IAAH,2NAYbO,EAAcP,EAAAA,EAAAA,IAAH,6GAOXQ,EAAYR,EAAAA,EAAAA,GAAH,gMAUTS,EAAYT,EAAAA,EAAAA,MAAH,6UAgBTU,GAAYV,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAH,6fAqBTY,GAAoBZ,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAH,kfAqBjBa,EAAab,EAAAA,EAAAA,OAAH,u1BA8BVc,GAAoBd,EAAAA,EAAAA,GAAOe,EAAAA,GAAPf,CAAH,+H","sources":["pages/LogIn/LogIn.jsx","pages/LogIn/LogIn.styled.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport { ToastContainer } from 'react-toastify';\nimport { FaFeather } from 'react-icons/fa';\nimport { login } from '../../redux/Auth/authOperations';\nimport {\n  ErrorNotification,\n  FormBox,\n  WrapperLeft,\n  WrapperRight,\n  WrapperCircle,\n  FormContent,\n  FormTitle,\n  FormLabel,\n  FormInput,\n  FormPasswordInput,\n  FormButton,\n  Layout,\n} from '../LogIn/LogIn.styled';\n\nconst schema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(6).max(12).required(),\n});\n\nconst LogIn = () => {\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(login(values));\n    resetForm();\n  };\n\n  return (\n    <>\n      <main>\n        <ToastContainer autoClose={3000} />\n        <Layout>\n          <Formik\n            initialValues={initialValues}\n            onSubmit={handleSubmit}\n            validationSchema={schema}\n          >\n            <FormBox>\n              <WrapperLeft></WrapperLeft>\n              <WrapperRight></WrapperRight>\n              <WrapperCircle></WrapperCircle>\n              <FormContent>\n                <FormTitle>Let's log in</FormTitle>\n                <FormLabel htmlFor=\"email\">E-mail</FormLabel>\n                <FormInput type=\"text\" id=\"email\" name=\"email\" />\n                <ErrorNotification name=\"email\" component=\"p\" />\n                <FormLabel htmlFor=\"password\">Password</FormLabel>\n                <FormPasswordInput\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                />\n                <ErrorNotification name=\"password\" component=\"p\" />\n                <FormButton type=\"submit\">\n                  <FaFeather style={{ marginRight: '5px' }} />\n                  <span>Ok</span>\n                </FormButton>\n              </FormContent>\n            </FormBox>\n          </Formik>\n        </Layout>\n      </main>\n    </>\n  );\n};\n\nexport default LogIn;\n","import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport Feathers from '../../images/feathers.png';\n\nexport const Layout = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background-color: #c5dde8;\n  background-image: url(${Feathers});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  transition: box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n`;\n\nexport const FormBox = styled(Form)`\n  position: relative;\n  width: 250px;\n  margin: 50px auto 0 auto;\n  background: white;\n  border-radius: 30px;\n  letter-spacing: 0.3ch;\n  text-transform: uppercase;\n  &:hover {\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12),\n      0px 4px 10px rgba(0, 0, 0, 0.06), 1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n  @media screen and (min-width: 480px) {\n    width: 400px;\n  }\n`;\n\nexport const WrapperLeft = styled.div`\n  @media screen and (min-width: 480px) {\n    content: '';\n    position: absolute;\n    width: 50px;\n    height: 20px;\n    background: white;\n    border-radius: 20px;\n    bottom: 60px;\n    left: -30px;\n    &:after {\n      content: '';\n      position: absolute;\n      width: 50px;\n      height: 20px;\n      border-radius: 30px;\n      background: white;\n      top: 20px;\n      left: 10px;\n    }\n    &:before {\n      content: '';\n      position: absolute;\n      width: 50px;\n      height: 20px;\n      border-radius: 30px;\n      background: white;\n      top: -20px;\n    }\n  }\n`;\n\nexport const WrapperRight = styled.div`\n  @media screen and (min-width: 480px) {\n    content: '';\n    position: absolute;\n    width: 50px;\n    height: 20px;\n    background: white;\n    border-radius: 20px;\n    top: 60px;\n    right: -30px;\n    &:after {\n      top: 20px;\n      right: 10px;\n      content: '';\n      position: absolute;\n      width: 50px;\n      height: 20px;\n      border-radius: 30px;\n      background: white;\n    }\n    &:before {\n      top: -20px;\n      right: 0;\n      content: '';\n      position: absolute;\n      width: 50px;\n      height: 20px;\n      border-radius: 30px;\n      background: white;\n    }\n  }\n`;\n\nexport const WrapperCircle = styled.div`\n  @media screen and (min-width: 768px) {\n    position: absolute;\n    bottom: 80px;\n    left: -55px;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background: white;\n  }\n`;\n\nexport const FormContent = styled.div`\n  padding: 10px;\n  @media screen and (min-width: 480px) {\n    padding: 20px;\n  }\n`;\n\nexport const FormTitle = styled.h3`\n  width: 100%;\n  font-weight: 500;\n  font-size: 18px;\n  text-align: center;\n  color: #000000;\n  @media screen and (min-width: 480px) {\n    font-size: 24px;\n  }\n`;\nexport const FormLabel = styled.label`\n  color: #000000;\n  display: block;\n  margin: 20px auto 10px auto;\n  font-size: 12px;\n  @media screen and (min-width: 480px) {\n    font-size: 14px;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n  @media screen and (min-width: 480px) {\n    margin: 30px auto 10px auto;\n  }\n`;\n\nexport const FormInput = styled(Field)`\n  display: block;\n  width: 95%;\n  padding-left: 0 0 0 10px;\n  margin: 0 auto;\n  background: #e9eff6;\n  line-height: 40px;\n  border-width: 1px;\n  font-size: 14px;\n  border-radius: 12px;\n  transition: box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  :hover,\n  :focus {\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\nexport const FormPasswordInput = styled(Field)`\n  display: block;\n  width: 95%;\n  margin: 0 auto;\n  background: #e9eff6;\n  line-height: 40px;\n  border-width: 1px;\n  border-radius: 12px;\n  font-family: 'Roboto', sans-serif;\n  transition: box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  :hover,\n  :focus {\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nexport const FormButton = styled.button`\n  display: block;\n  margin: 20px auto 0 auto;\n  width: 40%;\n  height: 40px;\n  font-family: inherit;\n  letter-spacing: 0.3ch;\n  text-transform: uppercase;\n  background: #6ca1bb;\n  border-bottom: 2px solid gray;\n  color: #000000;\n  font-size: 15px;\n  border-radius: 12px;\n  transition: box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1),\n    background-color 250ms cubic-bezier(0.075, 0.82, 0.165, 1),\n    color 250ms cubic-bezier(0.075, 0.82, 0.165, 1),\n    letter-spacing 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  :hover,\n  :focus {\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n    color: grey;\n    background-color: #eecfba;\n    letter-spacing: 0.1ch;\n  }\n  @media screen and (min-width: 480px) {\n    font-size: 15px;\n  }\n`;\n\nexport const ErrorNotification = styled(ErrorMessage)`\n  display: block;\n  text-align: center;\n  text-transform: none;\n  font-size: 13px;\n  color: coral;\n`;\n"],"names":["schema","yup","shape","email","required","password","min","max","dispatch","useDispatch","autoClose","initialValues","onSubmit","values","resetForm","login","validationSchema","htmlFor","type","id","name","component","style","marginRight","Layout","styled","Feathers","FormBox","Form","WrapperLeft","WrapperRight","WrapperCircle","FormContent","FormTitle","FormLabel","FormInput","Field","FormPasswordInput","FormButton","ErrorNotification","ErrorMessage"],"sourceRoot":""}